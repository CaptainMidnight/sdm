#!/bin/bash
#
# Copies personalization files into an SD card image
#

#
# Read configuration information from sdm (/etc/sdm/cparams)
#
source /mnt/sdm/usr/local/sdm/sdm-cparse ; readparams /mnt/sdm

logtoboth /mnt/sdm "* Start Phase 0 image customization"

if [ "$wpaconf" != "" ]
then
    logtoboth /mnt/sdm "> Copy wpa supplicant configuration from '$wpaconf'"
    # Copy and strip carriage returns just in case
    tr -d '\r' < $wpaconf > /mnt/sdm/etc/wpa_supplicant/wpa_supplicant.conf
else
    logtoboth "/mnt/sdm" ">%Skip wpa_supplicant configuration per command switch --nowpa"
fi
#
# Copy dhcpcd.conf extension into the image
#
if [ "$dhcpcd" != "" ]
then
    logtoboth /mnt/sdm "> Append dhcpcd.conf extension '$dhcpcd' to /etc/dhcpcd.conf"
    cat $dhcpcd >> /mnt/sdm/etc/dhcpcd.conf
#    echo "dhcpcd=$(basename $dhcpcd)" >> /mnt/sdm/etc/sdm/auto-1piboot.conf
fi
#
# Copy fstab extension into the image
#
if [ "$fstab" != "" ]
then
    logtoboth /mnt/sdm "> Copy fstab extension '$fstab' to /etc/sdm/assets and enable for FirstBoot"
    cp $fstab /mnt/sdm/etc/sdm/assets
    echo "fstab=$(basename $fstab)" >> /mnt/sdm/etc/sdm/auto-1piboot.conf
fi
#
# Copy user-defined exports file into the image
#
if [ "$exports" != "" ]
then
    logtoboth /mnt/sdm "> Copy file '$exports' to /etc/exports"
    cp $exports /mnt/sdm/etc/exports
fi
#
# Copy user-specified sysctl config file into the image
#
if [ "$sysctl" != "" ]
then
    logtoboth /mnt/sdm "> Copy file '$sysctl' to /etc/sysctl.d/$(basename $sysctl)"
    cp $sysctl /mnt/sdm/etc/sysctl.d/
fi
#
# Set HDMI configuration if requested
#
if [ "$hdmigroup" != "" -a "$hdmimode" != "" ]
then
    logtoboth /mnt/sdm "> Set 'hdmigroup' and 'hdmimode' in /boot/config.txt"
    sed -i "s/\#hdmi_group=1/hdmi_group=$hdmigroup/" /mnt/sdm/boot/config.txt
    sed -i "s/\#hdmi_mode=1/hdmi_mode=$hdmimode/" /mnt/sdm/boot/config.txt
fi
if [ "$hdmiforcehotplug" == "1" ]
then
    logtoboth /mnt/sdm "> Set 'hdmi_force_hotplug=1' in /boot/config.txt"
    sed -i "s/\#hdmi_force_hotplug=1/hdmi_force_hotplug=1/" /mnt/sdm/boot/config.txt
fi
#
# Set other config.txt settings (if any)
#
if [ "$bootconfig" != "" ]
then
    logtoboth /mnt/sdm "> Update /boot/config.txt for bootconfig: $bootconfig"
    readarray -d, citems <<< $bootconfig
    for c in ${citems[@]}
    do
	IFS=":=" read key value <<< $c
	value="${value%,}"
	sed -i "s/\#$key=.*/$key=$value/" /mnt/sdm/boot/config.txt
	logtoboth /mnt/sdm ">  $key=$value"
    done
fi
if [ "$bootadd" != "" ]
then
    if ! grep -q 'Following items added by sdm --bootadd' /mnt/sdm/boot/config.txt
    then
	logtoboth /mnt/sdm "> Add new keys to /boot/config.txt"
	logtoboth /mnt/sdm "> Update /boot/config.txt for bootadd: $bootadd"
	echo "# Following items added by sdm --bootadd" >> /mnt/sdm/boot/config.txt
	readarray -d, citems <<< $bootadd
	for c in ${citems[@]}
	do
	    IFS=":=" read key value <<< $c
	    value="${value%,}"
	    echo "$key=$value" >> /mnt/sdm/boot/config.txt
	    logtoboth /mnt/sdm ">  $key=$value"
	done
	echo "# Above items added by sdm --bootadd" >> /mnt/sdm/boot/config.txt
    else
	logtoboth /mnt/sdm "> /boot/config.txt already updated for --bootadd; skipping"
    fi
fi

if [ "$myuser" != "" ]
then
    #
    # Create user directory now, so that Custom Phase Script can copy into it if desired
    # Can't create the new user and fix directory ownership until sdm-phase1
    #
    [ ! -d /home/$myuser ] && mkdir /home/$myuser
fi

if [ "$eeprom" != "" ]
then
    logtoboth /mnt/sdm "> Set rpi-eeprom to '$eeprom'"
    sed -i "s/critical/$eeprom/" /mnt/sdm/etc/default/rpi-eeprom-update
fi


if [ "$cscript" != "" ]
then
    csfn="/mnt/sdm/usr/local/sdm/$(basename $cscript)"
    logtoboth /mnt/sdm "> Run Custom Phase Script '$csfn' Phase 0"
    $csfn 0
fi

logtoboth /mnt/sdm "* Phase 0 Completed"
